<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qa2xbwYO+AAAAABJRU5ErkJggg==
</value>
  </data>
</root>